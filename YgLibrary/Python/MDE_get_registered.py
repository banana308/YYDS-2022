import time

import requests
import json
import random
import datetime
from concurrent.futures import ThreadPoolExecutor


token="eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjE1MTI2NzE4ODg4NDM3MzkxMzciLCJleHAiOjE2NDk0OTEyOTYsInVzZXJuYW1lIjoiYjFiMmIzYjQifQ.fTGwrVv5XmapMz3k_n3wy6AQhFNnBpKsZTKEyTdGlPw"

list=[]
account_list=[]
name_list=[]
userID_lsit=['1484033450645172226', '1484033460271099906', '1484033473617375234', '1484033482953895937', '1484033492114255873', '1484033502922977282', '1484033512490184705', '1484033521499549697', '1484033532476043266', '1484033542550761473', '1484033551476240386', '1484033561857142785', '1484033570820370433', '1484033580328857601', '1484033589199810562', '1484033598171426817', '1484033612515946497', '1484033622460641282', '1484033631667138561', '1484033640684892162', '1484033650453426178', '1484033659185967105', '1484033668128223233', '1484033677305360386', '1484033686520246274', '1484033695839989762', '1484033705134567426', '1484033714223624194', '1484033723614670849', '1484033732439486466', '1484033741838921729', '1484033751481626626', '1484033760478408705', '1484033770116919297', '1484033783324782593', '1484033793508552706', '1484033802643746818', '1484033812332589057', '1484033821610389506', '1484033831529918465', '1484033840447008769', '1484033852476272642', '1484033861439500290', '1484033872067866626', '1484033882285191169', '1484033893123272706', '1484033903067967489', '1484033912186384385', '1484033922454040578', '1484033931744423938', '1484033941068361729', '1484033950291636226', '1484033960664150018', '1484033969811927041', '1484033979119087617', '1484033988447219713', '1484033998823927810', '1484034008487604225', '1484034017396305922', '1484034026317590529', '1484034035352121346', '1484034045565251586', '1484034054947909633', '1484034069359538178', '1484034079329398785', '1484034088959520770', '1484034098509950978', '1484034108127490049', '1484034117300432897', '1484034126691479554', '1484034135495323650', '1484034149110034433', '1484034162418561026', '1484034171620864002', '1484034180818972674', '1484034189979332609', '1484034199114526722', '1484034208358772737', '1484034217829511169', '1484034227149254658', '1484034236385112066', '1484034245721632770', '1484034255326588929', '1484034264537280514', '1484034273773137922', '1484034283084492801', '1484034292282601473', '1484034302122438657', '1484034311286992897', '1484034320812257281', '1484034330287190018', '1484034340072501250', '1484034351913021441', '1484034361174044674', '1484034371362009090', '1484034381436727297', '1484034390924242945', '1484034399761641473', '1484034408980721665', '1484034420531834882', '1484034430082265090', '1484034440207314946', '1484034449292177410', '1484034458855190530', '1484034468254625793', '1484034478169960449', '1484034487196102658', '1484034497463758849', '1484034506510872578', '1484034515939667969', '1484034525464932353', '1484034534646263809', '1484034543936647170', '1484034553814233090', '1484034563364663297', '1484034572340473857', '1484034581823795201', '1484034591760101378', '1484034600643637250', '1484034610256982018', '1484034619526393857', '1484034633975771138', '1484034643463286785', '1484034652774641666', '1484034662031470594', '1484034671175053313', '1484034680503185409', '1484034691274158081', '1484034701596340225', '1484034710949638146', '1484034720500068354', '1484034729496850434', '1484034738879508481', '1484034747792404481', '1484034756910821378', '1484034766213787649', '1484034775755829249', '1484034784693891074', '1484034793992663041', '1484034802981056513', '1484034812221108226', '1484034821737984001', '1484034830814457858', '1484034840029343745', '1484034849873375234', '1484034859067289601', '1484034868898738178', '1484034878361088001', '1484034890109333506', '1484034899538128898', '1484034908664934401', '1484034922346754049', '1484034931511308289', '1484034940696834049', '1484034952981950465', '1484034962884702210', '1484034972900700161', '1484034982648262658', '1484034991997366273', '1484035001086423042', '1484035010792042498', '1484035019902070786', '1484035029146316801', '1484035038751272962', '1484035048721133570', '1484035058128957442', '1484035067385786370', '1484035076395151362', '1484035085626814465', '1484035095370182657', '1484035105163882497', '1484035114311659521', '1484035123140669441', '1484035133370576897', '1484035143193636866', '1484035153016696833', '1484035162646818818', '1484035171672961025', '1484035183857414145', '1484035193076494337', '1484035202312351745', '1484035211250413569', '1484035220540796930', '1484035227763388418', '1484035238286897153', '1484035247430479873', '1484035256754417666', '1484035266082549761', '1484035276115324930', '1484035285909024770', '1484035295606255618', '1484035305521590274', '1484035315474673665', '1484035325129961474', '1484035334462287874', '1484035343442292738', '1484035352942391298', '1484035362497015809', '1484035372185858050', '1484035381891477505', '1484035391840366593', '1484035401189470209', '1484035410593099778', '1484035419287891970', '1484035428695715841', '1484035444038479873', '1484035453433720833', '1484035462245953538', '1484035471280484353', '1484035480914800641', '1484035493887782914', '1484035502981033985', '1484035513227718658', '1484035522153197569', '1484035530873155585', '1484035539534393346', '1484035548640227329', '1484035559092432897', '1484035567762059265', '1484035576582680578', '1484035585545908226', '1484035594106482690', '1484035603837267970', '1484035613802934273', '1484035623290449921', '1484035632878628866', '1484035643213393921', '1484035652096929793', '1484035661257289730', '1484035670014996481', '1484035679301185537', '1484035688474128385', '1484035698083278850', '1484035707264610306', '1484035716303335426', '1484035725648244737', '1484035735353864194', '1484035744287731713', '1484035753032855553', '1484035761928974338', '1484035771252912130', '1484035779930927106', '1484035789884010497', '1484035799220531201', '1484035809328803842', '1484035819546128385', '1484035828664545281', '1484035839561347073', '1484035849371824130', '1484035858351828993', '1484035867952590849', '1484035877649821697', '1484035887355441154', '1484035896188645377', '1484035905051209729', '1484035913574035457', '1484035922147192834', '1484035930774876161', '1484035939238981633', '1484035951482155009', '1484035960365690882', '1484035969098231809', '1484035977671389185', '1484035987460894721', '1484035997044879362', '1484036005957775362', '1484036521248993281', '1484036531218853890', '1484036541335515137', '1484036550378434562', '1484036561275236354', '1484036575418429441', '1484036586910822402', '1484036595886632962', '1484036604883415041', '1484036614253490178', '1484036624999297025', '1484036629961158657', '1484036639121518594', '1484036648302850050', '1484036658553729026', '1484036667667951618', '1484036677969162242', '1484036687494426626', '1484036696868696066', '1484036705970335746', '1484036715508183041', '1484036725146693633', '1484036734978142210', '1484036744100753409', '1484036753437274114', '1484036768163475458', '1484036777151868929', '1484036786182205441', '1484036795371925505', '1484036804821692417', '1484036814200156161', '1484036823490539522', '1484036833691086850', '1484036847477764098', '1484036857502150658', '1484036867467816962', '1484036877248933889', '1484036886744838145', '1484036895762591746', '1484036905271078913', '1484036914670514177', '1484036924023812097', '1484036932932513793', '1484036941870575617', '1484036951563612162', '1484036960891744258', '1484036970219876353', '1484036979518648322', '1484036989111021570', '1484036998225244162', '1484037007553376257', '1484037017183498242', '1484037031410577410', '1484037040570937345', '1484037050196865026', '1484037059977981953', '1484037069528412162', '1484037078525194242', '1484037088444723202', '1484037097613471746', '1484037107537195010', '1484037118694043649', '1484037129481793538', '1484037138734428161', '1484037147819290625', '1484037157239697409', '1484037166551052290', '1484037176143425537', '1484037185383477249', '1484037194648694785', '1484037204283011073', '1484037213606948865', '1484037223044132866', '1484037232158355458', '1484037241985609730', '1484037251011751937', '1484037261644312578', '1484037271685476353', '1484037281424650241', '1484037297518194690', '1484037308024926209', '1484037318342914049', '1484037328367300610', '1484037337896759298', '1484037347350720514', '1484037356402028546', '1484037366132813826', '1484037375762935810', '1484037385401446401', '1484037396600238082', '1484037406515572738', '1484037415457828865', '1484037425100533761', '1484037435275915265', '1484037444679544833', '1484037454481633281', '1484037463822348290', '1484037473188229122', '1484037482658967554', '1484037492578496514', '1484037501692719106', '1484037511243149314', '1484037521082986497', '1484037530474033154', '1484037539986714626', '1484037549813968898', '1484037562480766977', '1484037571582406658', '1484037580944093185', '1484037590486134786', '1484037600049147905', '1484037608999792642', '1484037618189512706', '1484037627337289730', '1484037637248430082', '1484037646312321026', '1484037655636258818', '1484037667967512577', '1484037679233413122', '1484037688695762946', '1484037697906454530', '1484037707268141057', '1484037717258973186', '1484037726167674882', '1484037735218982914', '1484037744232542210', '1484037753900412929', '1484037763668946945', '1484037773361983490', '1484037782656561153', '1484037792014053377', '1484037801707089921', '1484037810796146690', '1484037821437095937', '1484037830303854594', '1484037839728455682', '1484037850814001154', '1484037859949195265', '1484037871097655297', '1484037880866189313', '1484037890244653058', '1484037899224657921', '1484037909001580546', '1484037918224855041', '1484037927292940289', '1484037946171502593', '1484037955487051778', '1484037964920041474', '1484037974403362817', '1484037983484030978', '1484037993445502978', '1484038002530365442', '1484038011715891201', '1484038020700090370', '1484038029654929410', '1484038038823677953', '1484038048466382850', '1484038057563828226', '1484038066598359042', '1484038075733553153', '1484038086022180865', '1484038095740383233', '1484038104825245698', '1484038113943662594', '1484038124035158018', '1484038132989997057', '1484038142175522818', '1484038151109390337', '1484038160714346497', '1484038170583543810', '1484038179500634114', '1484038188606468098', '1484038197901045762', '1484038207594082306', '1484038222181871617', '1484038231057018882', '1484038240133492738', '1484038249331601410', '1484038259402125313', '1484038268642177026', '1484038277722845186', '1484038286732210177', '1484038297276690434', '1484038306462216194', '1484038315966509058', '1484038325508550658', '1484038335180615682', '1484038344135454722', '1484038353119653889', '1484038362351316993', '1484038371843026945', '1484038380676231169', '1484038391648530434', '1484038401228320769', '1484038410422235137', '1484038420798943234', '1484038430311624705', '1484038439572647938', '1484038449068552193', '1484038459017441282', '1484038468911804418', '1484038478495789058', '1484038490218868738', '1484038500419416065', '1484038509986623490', '1484038519264423937', '1484038528370257922', '1484038538038128641', '1484038547018133505', '1484038556040081410', '1484038565624066050', '1484038575476486146', '1484038584775258114', '1484038594472488961', '1484038604459126785', '1484038614512873473', '1484038623539015682', '1484038632569352193', '1484038645437476866', '1484038654694305794', '1484038663976300545', '1484038673581256706', '1484038683005857793', '1484038692623396866', '1484038701834088450', '1484038711283855362', '1484038720318386178', '1484038729428414466', '1484038738626523137', '1484038747438755842', '1484038757937098754', '1484038766770302977', '1484038775599312898', '1484038785107800065', '1484038794347851777', '1484038804229632001', '1484038813096390658', '1484038823129165826', '1484038832801230849', '1484038841902870530', '1484038851843371009', '1484038861226029057', '1484038870092787714', '1484038879274119170', '1484038888501587970', '1484038898207207426', '1484038907325624322', '1484038920554459138', '1484038929790316545', '1484038940485791745', '1484038950006861826', '1484038960056414210', '1484038969845919745', '1484038979111137281', '1484038989542371330', '1484038999252185089', '1484039008777449473', '1484039018256576514', '1484039030243897345', '1484039040251506689', '1484039050095538178', '1484039059645968386', '1484039068747608066', '1484039078507753473', '1484039088842518530', '1484039098430697473', '1484039107612028929', '1484039116680114178', '1484039125593010177', '1484039138666655745', '1484039147768295426', '1484039156857352194', '1484039165849939969', '1484039175488450562', '1484039184887885825', '1484039194568339458', '1484039204093603842', '1484039213354627073', '1484039222443683842', '1484039232396767234', '1484039242286936065', '1484039251547959297', '1484039260536352770', '1484039269558300674', '1484039278806740993', '1484039288705298433', '1484039299128143874', '1484039308980563969', '1484039318652628994', '1484039327590690817', '1484039337648631810', '1484039348029534210', '1484039358691454978', '1484039367725985794', '1484039377196724225', '1484039386172534785', '1484039396503105537', '1484039405969649665', '1484039415402639362', '1484039424416198658', '1484039434520276994', '1484039443567390722', '1484039452488675330', '1484039462072659969', '1484039476962439169', '1484039486252822529', '1484039497959124993', '1484039507870265346', '1484039516737024001', '1484039526555889665', '1484039535821107202', '1484039544813694977', '1484039554372513793', '1484039566083010561', '1484039575583109121', '1484039584575696898', '1484039594713329665', '1484039604246982658', '1484039613533171713', '1484039624589357058', '1484039634106232833', '1484039643337895938', '1484039652171100161', '1484039662535225346']

z_m_list=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
z_m_j=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
z_m_i=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
z_m_num01=["0","1","2","3","4","5","6","7","8","9"]

#120测试环境
URL="https://mdesearch.betf.best"
#58测试环境
# URL="http://192.168.10.237:8093"

def rambbq(j,i):
    global zm,handicapType,account,retreatProportion,profitLossPercentage,name,b,z_m_j,z_m_i,z_m_list
    #随机盘口
    b=j
    if i==0:
        # print("j的数字：" + str(j) +"   j取值为："+str(z_m_j[j])+ "\n"+ "i的数字：" + str(i)+"   i取值为："+str(z_m_num01[i]))
        print("j的数字：" + str(j) + "   j取值为：" + str(z_m_num01[j]) + "\n" + "i的数字：" + str(i) + "   i取值为：" + str(z_m_j[i]))
    # zm = "testagent00010203"+str(z_m_j[j])
    zm = "b1b2b3b4" + str(z_m_num01[j])
    water= random.randint(1,4)
    if water==1:
        handicapType="A"
        pp=random.randint(0,7)
        pp_num=['18','17','16','14','13','12','10','7']
        retreatProportion=pp_num[pp]
    if water==2:
        handicapType="B"
        pp = random.randint(0, 5)
        pp_num = [ '16', '14', '13', '12', '10', '7']
        retreatProportion = pp_num[pp]
    if water==3:
        handicapType = "C"
        pp = random.randint(0, 1)
        pp_num = ['10', '7']
        retreatProportion = pp_num[pp]
    if water == 4:
        handicapType = "D"
        retreatProportion = '7'

    #拼接account
    # account=zm+str(z_m_i[i])
    # account = zm + str(z_m_num01[i])
    account = zm + str(z_m_j[i])


    #拼接name
    name="王者test账号"+str(z_m_j[j])+str(z_m_i[i])
    # name_list.append(name)

    #随机占成数
    num=random.randint(0,14)
    kkk_nmu=['0','1','2','3','4','5','6','7','8','9','10','11','12','13','14']
    profitLossPercentage=kkk_nmu[0]


def registered(money):
    url = str(URL)+"/uuser/addUser"
    headers01 = {
        'Content-Type': 'application/json;charset=UTF-8',
        'LoginDiv':'555666',
        'Account_Login_Identify':token
    }

    data = {
    "account":account,
    "creditsAmount":money,
    "status":"",
    "currency":"CNY",
    "exchangeRate":"",
    "handicapType":"A",
    "name":name,
    "password":"Bfty123456",
    "profitLossPercentage":0,
    "quotaMode":"",
    "userConfigurationParams":[
    {"handicapCategoryId":"1","retreatProportion":18,"singleBetLimit":3000,"singleGameBetLimit":100000,"sportCategoryId":"1"},
    {"handicapCategoryId":"2","retreatProportion":18,"singleBetLimit":3000,"singleGameBetLimit":100000,"sportCategoryId":"1"},
    {"handicapCategoryId":"3","retreatProportion":"","singleBetLimit":3000,"singleGameBetLimit":100000,"sportCategoryId":"1"},
    {"handicapCategoryId":"100","retreatProportion":"","singleBetLimit":3000,"singleGameBetLimit":100000,"sportCategoryId":"1"},
    {"handicapCategoryId":"1","retreatProportion":18,"singleBetLimit":3000,"singleGameBetLimit":100000,"sportCategoryId":"2"},
    {"handicapCategoryId":"2","retreatProportion":18,"singleBetLimit":3000,"singleGameBetLimit":100000,"sportCategoryId":"2"},
    {"handicapCategoryId":"3","retreatProportion":"","singleBetLimit":3000,"singleGameBetLimit":100000,"sportCategoryId":"2"},
    {"handicapCategoryId":"100","retreatProportion":"","singleBetLimit":3000,"singleGameBetLimit":100000,"sportCategoryId":"2"},
    {"handicapCategoryId":"1","retreatProportion":18,"singleBetLimit":3000,"singleGameBetLimit":100000,"sportCategoryId":"100"},
    {"handicapCategoryId":"2","retreatProportion":18,"singleBetLimit":3000,"singleGameBetLimit":100000,"sportCategoryId":"100"},
    {"handicapCategoryId":"3","retreatProportion":"","singleBetLimit":3000,"singleGameBetLimit":100000,"sportCategoryId":"100"},
    {"handicapCategoryId":"100","retreatProportion":"","singleBetLimit":3000,"singleGameBetLimit":100000,"sportCategoryId":"100"}]}
    response = requests.post(url=url, headers=headers01, json=data)
    # 返回结果json转化
    results = json.loads(response.text)
    #print(results)
    code=results['data']['code']
    message=results['data']['message']
    #print(code,message)
    #判断是否新增会员成功:
    if code==0 and message=="OK":
        print("会员:"+str(account)+"新增成功"+"  code:"+str(code)+"  massage:" + str(message)+"\n")
        list.append(account)
        #写入txt文档
        path01 = "C:\\test\\user.txt"
        f = open(path01, 'a')
        f.write(str(account) + "\n")
        time.sleep(0.5)
    else:
        print("新增账号："+str(account)+"   错误原因："+"code:"+str(code)+ "    massage:" + str(message))
        print("j的数字：" + str(j) +"   j取值为："+str(z_m_j[j])+ "\n"+ "i的数字：" + str(i)+"   i取值为："+str(z_m_num01[i]))
        exit()

def upadte_001(ppyur):
    url = str(URL)+"/uuser/updateQuota?"
    headers01 = {
        'Content-Type': 'application/json;charset=UTF-8',
        'LoginDiv': '555666',
        'Account_Login_Identify': token
    }

    data = {
        'userId':userID_lsit[ppyur],
        'quotaAmount':30
    }
    print(userID_lsit[ppyur])
    response = requests.get(url=url, headers=headers01, params=data)
    # 返回结果json转化
    results = json.loads(response.text)
    code = results['code']
    message = results['message']
    # print(code,message)
    # 判断是否新增会员成功:
    if code == 0 and message == "OK":
        print("会员:" + str(j) +
              "修改信用额度成功" +
              "  code:" + str(code) +
              "  massage:" + str(message) + "\n"
              )
    else:
        print("修改账号：" + str(j) + "   错误原因：" + "code:" + str(code) + "    massage:" + str(message))
        exit()



# if __name__=='__main__':
#     with ThreadPoolExecutor(max_workers=2) as t:  # 创建一个最大容纳数量为5的线程池
#         for j in range(0, len(userID_lsit)):
#             task1 = t.submit(upadte_001, j)










# if __name__=='__main__':
#     for j in range(0, 26):
#         for i in range(0,26):
#             rambbq(j,i)
#             registered(5000)
#         if j == (26-1):
#             print(len(list))
#             print(list)
#         else:
#             pass

# if __name__=='__main__':
#     for j in range(0, 26):
#         for i in range(0,10):
#             rambbq(j,i)
#             registered(5000)
#         if j == (26-1):
#             print(len(list))
#             print(list)
#         else:
#             pass

if __name__=='__main__':
    for j in range(0, 10):
        for i in range(0,26):
            rambbq(j,i)
            registered(10000)
        if j == (10-1):
            print(len(list))
            print(list)
        else:
            pass